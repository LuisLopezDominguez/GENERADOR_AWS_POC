{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SOAINT\\\\Desktop\\\\Generador-Contenido-AWS\\\\GENERADOR_AWS_POC\\\\src\\\\components\\\\GeneratedContent\\\\GeneratedContent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Typography, Button, Paper, TextField, Box, CircularProgress, Chip, Divider } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GeneratedContent = ({\n  data,\n  onBack\n}) => {\n  _s();\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  const [copied, setCopied] = useState(false);\n  const [selectedNetwork, setSelectedNetwork] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [debug, setDebug] = useState(true);\n\n  // Redes sociales disponibles\n  const socialNetworks = [{\n    name: 'LinkedIn',\n    color: '#0077B5'\n  }, {\n    name: 'Facebook',\n    color: '#1877F2'\n  }, {\n    name: 'Twitter',\n    color: '#1DA1F2'\n  }, {\n    name: 'Instagram',\n    color: '#E1306C'\n  }];\n  useEffect(() => {\n    console.log(\"GeneratedContent recibiÃ³ datos:\", data);\n    if (data) {\n      // Iniciar un breve loading para simular procesamiento\n      setIsLoading(true);\n      setTimeout(() => {\n        try {\n          // Generar tÃ­tulo y contenido basados en los datos recibidos\n          const generatedTitle = generarTitulo(data);\n          const generatedContent = generarContenido(data);\n          console.log(\"TÃ­tulo generado:\", generatedTitle);\n          console.log(\"Contenido generado:\", generatedContent);\n          setTitle(generatedTitle);\n          setContent(generatedContent);\n        } catch (error) {\n          console.error(\"Error al procesar datos:\", error);\n          setTitle(\"Error al procesar datos\");\n          setContent(\"Hubo un error al procesar el contenido extraÃ­do: \" + error.message);\n        }\n        setIsLoading(false);\n      }, 1000);\n    } else {\n      console.warn(\"No se recibieron datos en GeneratedContent\");\n      setTitle(\"No hay datos disponibles\");\n      setContent(\"No se ha podido generar contenido porque no se recibieron datos.\");\n    }\n  }, [data]);\n\n  // FunciÃ³n para generar un tÃ­tulo basado en el contenido extraÃ­do\n  const generarTitulo = data => {\n    console.log(\"Generando tÃ­tulo a partir de:\", data);\n\n    // Para Web Scraping\n    if (data.scraped_content && data.scraped_content.length > 0) {\n      // Intentar usar el tÃ­tulo de la primera pÃ¡gina analizada\n      for (const page of data.scraped_content) {\n        if (page.title && page.title.trim()) {\n          return page.title;\n        }\n      }\n\n      // Si no hay tÃ­tulo, intentar usar la URL\n      const firstPage = data.scraped_content[0];\n      if (firstPage.url) {\n        try {\n          const hostname = new URL(firstPage.url).hostname;\n          return `Contenido de ${hostname}`;\n        } catch (e) {\n          console.error(\"Error al parsear URL:\", e);\n        }\n      }\n    }\n\n    // Para OCR\n    if (data.extracted_text) {\n      // Extraer primera lÃ­nea no vacÃ­a como tÃ­tulo\n      const lines = data.extracted_text.split('\\n').filter(line => line.trim().length > 0);\n      if (lines.length > 0) {\n        return lines[0].slice(0, 50) + (lines[0].length > 50 ? '...' : '');\n      }\n    }\n\n    // TÃ­tulo por defecto segÃºn el tipo de contenido\n    const tipoContenido = data.contentType || \"PUBLICACION\";\n    switch (tipoContenido) {\n      case 'IMAGEN':\n        return \"Nueva imagen para tus redes sociales\";\n      case 'FLYER':\n        return \"Flyer promocional\";\n      case 'AUDIO':\n        return \"Nuevo audio para compartir\";\n      case 'ARTICULO':\n        return \"ArtÃ­culo de interÃ©s\";\n      default:\n        return \"Contenido para tu publicaciÃ³n\";\n    }\n  };\n\n  // FunciÃ³n para generar contenido basado en la informaciÃ³n extraÃ­da\n  const generarContenido = data => {\n    console.log(\"Generando contenido a partir de:\", data);\n\n    // Para Web Scraping\n    if (data.scraped_content && data.scraped_content.length > 0) {\n      console.log(\"Procesando datos de web scraping\");\n      let contenidoCombinado = \"\";\n      data.scraped_content.forEach((sitio, index) => {\n        console.log(`Procesando sitio ${index}:`, sitio);\n\n        // Primero intentamos usar el main_text si existe\n        if (sitio.main_text && sitio.main_text.trim()) {\n          console.log(\"Usando main_text\");\n\n          // Extraer los primeros pÃ¡rrafos significativos\n          const parrafos = sitio.main_text.split('\\n').filter(p => p.trim().length > 30).slice(0, 3);\n          if (parrafos.length > 0) {\n            contenidoCombinado += `ðŸ“„ De ${new URL(sitio.url).hostname}:\\n\\n`;\n            contenidoCombinado += parrafos.join('\\n\\n') + '\\n\\n';\n          }\n        }\n      });\n\n      // Si hay contenido extraÃ­do, devolverlo\n      if (contenidoCombinado.trim()) {\n        console.log(\"Contenido combinado generado.\");\n        return contenidoCombinado + \"\\n\\nFuentes: \" + data.scraped_content.map(s => s.url || \"URL\").join(\", \");\n      }\n\n      // Si no se pudo extraer contenido significativo\n      return \"No se pudo extraer contenido significativo de las URLs proporcionadas. Intenta con otras URLs o edita manualmente este contenido.\";\n    }\n\n    // Para OCR\n    if (data.extracted_text) {\n      console.log(\"Procesando datos de OCR\");\n      return data.extracted_text.slice(0, 500) + (data.extracted_text.length > 500 ? '...' : '');\n    }\n\n    // Si hay algÃºn otro tipo de contenido\n    if (data.content) {\n      console.log(\"Usando data.content\");\n      return data.content;\n    }\n    console.warn(\"No se encontrÃ³ contenido procesable\");\n    // Contenido por defecto\n    return \"Â¡Comparte este contenido con tu audiencia! PersonalÃ­zalo segÃºn tus necesidades.\";\n  };\n  const handleCopy = () => {\n    const textToCopy = `${title}\\n\\n${content}`;\n    navigator.clipboard.writeText(textToCopy).then(() => {\n      setCopied(true);\n      setTimeout(() => setCopied(false), 2000);\n    });\n  };\n  const handleNetworkSelect = network => {\n    setSelectedNetwork(network);\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      sx: {\n        padding: '2rem',\n        margin: '2rem',\n        width: '100%',\n        backgroundColor: '#fff',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        minHeight: '300px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n        color: \"primary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        sx: {\n          mt: 2\n        },\n        children: \"Generando tu contenido...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    elevation: 3,\n    sx: {\n      padding: '2rem',\n      margin: '2rem',\n      width: '100%',\n      backgroundColor: '#fff'\n    },\n    children: [debug && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mb: 3,\n        p: 2,\n        bgcolor: '#f8f8f8',\n        borderRadius: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle2\",\n        gutterBottom: true,\n        children: \"Modo Debug - Datos Recibidos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        style: {\n          overflow: 'auto',\n          maxHeight: '150px',\n          fontSize: '0.75rem'\n        },\n        children: JSON.stringify(data, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"Contenido Generado\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        gutterBottom: true,\n        children: \"Selecciona una red social\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          flexWrap: 'wrap',\n          gap: '0.5rem'\n        },\n        children: socialNetworks.map(network => /*#__PURE__*/_jsxDEV(Button, {\n          variant: selectedNetwork === network.name ? \"contained\" : \"outlined\",\n          sx: {\n            backgroundColor: selectedNetwork === network.name ? network.color : 'transparent',\n            color: selectedNetwork === network.name ? '#fff' : network.color,\n            borderColor: network.color,\n            '&:hover': {\n              backgroundColor: network.color,\n              color: '#fff',\n              opacity: 0.9\n            }\n          },\n          onClick: () => handleNetworkSelect(network.name),\n          children: network.name\n        }, network.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {\n      sx: {\n        my: 2\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'space-between',\n          mb: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: \"T\\xEDtulo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Chip, {\n          label: \"Personaliza el t\\xEDtulo seg\\xFAn tus necesidades\",\n          variant: \"outlined\",\n          size: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        variant: \"outlined\",\n        fullWidth: true,\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        sx: {\n          backgroundColor: 'transparent'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'space-between',\n          mb: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: \"Contenido de la publicaci\\xF3n\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          size: \"small\",\n          onClick: handleCopy,\n          color: copied ? \"success\" : \"primary\",\n          children: copied ? \"Â¡Copiado!\" : \"Copiar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        variant: \"outlined\",\n        multiline: true,\n        rows: 8,\n        fullWidth: true,\n        value: content,\n        onChange: e => setContent(e.target.value),\n        sx: {\n          backgroundColor: 'transparent'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        mt: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        onClick: onBack,\n        children: \"Volver\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        sx: {\n          backgroundColor: '#ff9800',\n          color: '#fff',\n          '&:hover': {\n            backgroundColor: '#e65100'\n          }\n        },\n        children: \"Publicar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 191,\n    columnNumber: 9\n  }, this);\n};\n_s(GeneratedContent, \"3B4pJmH/nP655t1hzJzTWxZ5sAo=\");\n_c = GeneratedContent;\nexport default GeneratedContent;\nvar _c;\n$RefreshReg$(_c, \"GeneratedContent\");","map":{"version":3,"names":["React","useState","useEffect","Typography","Button","Paper","TextField","Box","CircularProgress","Chip","Divider","jsxDEV","_jsxDEV","GeneratedContent","data","onBack","_s","title","setTitle","content","setContent","copied","setCopied","selectedNetwork","setSelectedNetwork","isLoading","setIsLoading","debug","setDebug","socialNetworks","name","color","console","log","setTimeout","generatedTitle","generarTitulo","generatedContent","generarContenido","error","message","warn","scraped_content","length","page","trim","firstPage","url","hostname","URL","e","extracted_text","lines","split","filter","line","slice","tipoContenido","contentType","contenidoCombinado","forEach","sitio","index","main_text","parrafos","p","join","map","s","handleCopy","textToCopy","navigator","clipboard","writeText","then","handleNetworkSelect","network","elevation","sx","padding","margin","width","backgroundColor","display","flexDirection","alignItems","justifyContent","minHeight","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","mt","mb","bgcolor","borderRadius","gutterBottom","style","overflow","maxHeight","fontSize","JSON","stringify","flexWrap","gap","borderColor","opacity","onClick","my","label","size","fullWidth","value","onChange","target","multiline","rows","_c","$RefreshReg$"],"sources":["C:/Users/SOAINT/Desktop/Generador-Contenido-AWS/GENERADOR_AWS_POC/src/components/GeneratedContent/GeneratedContent.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Typography, Button, Paper, TextField, Box, CircularProgress, Chip, Divider } from '@mui/material';\r\n\r\nconst GeneratedContent = ({ data, onBack }) => {\r\n    const [title, setTitle] = useState('');\r\n    const [content, setContent] = useState('');\r\n    const [copied, setCopied] = useState(false);\r\n    const [selectedNetwork, setSelectedNetwork] = useState('');\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [debug, setDebug] = useState(true);\r\n\r\n    // Redes sociales disponibles\r\n    const socialNetworks = [\r\n        { name: 'LinkedIn', color: '#0077B5' },\r\n        { name: 'Facebook', color: '#1877F2' },\r\n        { name: 'Twitter', color: '#1DA1F2' },\r\n        { name: 'Instagram', color: '#E1306C' }\r\n    ];\r\n\r\n    useEffect(() => {\r\n        console.log(\"GeneratedContent recibiÃ³ datos:\", data);\r\n\r\n        if (data) {\r\n            // Iniciar un breve loading para simular procesamiento\r\n            setIsLoading(true);\r\n            setTimeout(() => {\r\n                try {\r\n                    // Generar tÃ­tulo y contenido basados en los datos recibidos\r\n                    const generatedTitle = generarTitulo(data);\r\n                    const generatedContent = generarContenido(data);\r\n\r\n                    console.log(\"TÃ­tulo generado:\", generatedTitle);\r\n                    console.log(\"Contenido generado:\", generatedContent);\r\n\r\n                    setTitle(generatedTitle);\r\n                    setContent(generatedContent);\r\n                } catch (error) {\r\n                    console.error(\"Error al procesar datos:\", error);\r\n                    setTitle(\"Error al procesar datos\");\r\n                    setContent(\"Hubo un error al procesar el contenido extraÃ­do: \" + error.message);\r\n                }\r\n\r\n                setIsLoading(false);\r\n            }, 1000);\r\n        } else {\r\n            console.warn(\"No se recibieron datos en GeneratedContent\");\r\n            setTitle(\"No hay datos disponibles\");\r\n            setContent(\"No se ha podido generar contenido porque no se recibieron datos.\");\r\n        }\r\n    }, [data]);\r\n\r\n    // FunciÃ³n para generar un tÃ­tulo basado en el contenido extraÃ­do\r\n    const generarTitulo = (data) => {\r\n        console.log(\"Generando tÃ­tulo a partir de:\", data);\r\n\r\n        // Para Web Scraping\r\n        if (data.scraped_content && data.scraped_content.length > 0) {\r\n            // Intentar usar el tÃ­tulo de la primera pÃ¡gina analizada\r\n            for (const page of data.scraped_content) {\r\n                if (page.title && page.title.trim()) {\r\n                    return page.title;\r\n                }\r\n            }\r\n\r\n            // Si no hay tÃ­tulo, intentar usar la URL\r\n            const firstPage = data.scraped_content[0];\r\n            if (firstPage.url) {\r\n                try {\r\n                    const hostname = new URL(firstPage.url).hostname;\r\n                    return `Contenido de ${hostname}`;\r\n                } catch (e) {\r\n                    console.error(\"Error al parsear URL:\", e);\r\n                }\r\n            }\r\n        }\r\n\r\n        // Para OCR\r\n        if (data.extracted_text) {\r\n            // Extraer primera lÃ­nea no vacÃ­a como tÃ­tulo\r\n            const lines = data.extracted_text.split('\\n').filter(line => line.trim().length > 0);\r\n            if (lines.length > 0) {\r\n                return lines[0].slice(0, 50) + (lines[0].length > 50 ? '...' : '');\r\n            }\r\n        }\r\n\r\n        // TÃ­tulo por defecto segÃºn el tipo de contenido\r\n        const tipoContenido = data.contentType || \"PUBLICACION\";\r\n        switch (tipoContenido) {\r\n            case 'IMAGEN':\r\n                return \"Nueva imagen para tus redes sociales\";\r\n            case 'FLYER':\r\n                return \"Flyer promocional\";\r\n            case 'AUDIO':\r\n                return \"Nuevo audio para compartir\";\r\n            case 'ARTICULO':\r\n                return \"ArtÃ­culo de interÃ©s\";\r\n            default:\r\n                return \"Contenido para tu publicaciÃ³n\";\r\n        }\r\n    };\r\n\r\n    // FunciÃ³n para generar contenido basado en la informaciÃ³n extraÃ­da\r\n    const generarContenido = (data) => {\r\n        console.log(\"Generando contenido a partir de:\", data);\r\n\r\n        // Para Web Scraping\r\n        if (data.scraped_content && data.scraped_content.length > 0) {\r\n            console.log(\"Procesando datos de web scraping\");\r\n            let contenidoCombinado = \"\";\r\n\r\n            data.scraped_content.forEach((sitio, index) => {\r\n                console.log(`Procesando sitio ${index}:`, sitio);\r\n\r\n                // Primero intentamos usar el main_text si existe\r\n                if (sitio.main_text && sitio.main_text.trim()) {\r\n                    console.log(\"Usando main_text\");\r\n\r\n                    // Extraer los primeros pÃ¡rrafos significativos\r\n                    const parrafos = sitio.main_text.split('\\n')\r\n                        .filter(p => p.trim().length > 30)\r\n                        .slice(0, 3);\r\n\r\n                    if (parrafos.length > 0) {\r\n                        contenidoCombinado += `ðŸ“„ De ${new URL(sitio.url).hostname}:\\n\\n`;\r\n                        contenidoCombinado += parrafos.join('\\n\\n') + '\\n\\n';\r\n                    }\r\n                }\r\n            });\r\n\r\n            // Si hay contenido extraÃ­do, devolverlo\r\n            if (contenidoCombinado.trim()) {\r\n                console.log(\"Contenido combinado generado.\");\r\n                return contenidoCombinado + \"\\n\\nFuentes: \" + data.scraped_content.map(s => s.url || \"URL\").join(\", \");\r\n            }\r\n\r\n            // Si no se pudo extraer contenido significativo\r\n            return \"No se pudo extraer contenido significativo de las URLs proporcionadas. Intenta con otras URLs o edita manualmente este contenido.\";\r\n        }\r\n\r\n        // Para OCR\r\n        if (data.extracted_text) {\r\n            console.log(\"Procesando datos de OCR\");\r\n            return data.extracted_text.slice(0, 500) + (data.extracted_text.length > 500 ? '...' : '');\r\n        }\r\n\r\n        // Si hay algÃºn otro tipo de contenido\r\n        if (data.content) {\r\n            console.log(\"Usando data.content\");\r\n            return data.content;\r\n        }\r\n\r\n        console.warn(\"No se encontrÃ³ contenido procesable\");\r\n        // Contenido por defecto\r\n        return \"Â¡Comparte este contenido con tu audiencia! PersonalÃ­zalo segÃºn tus necesidades.\";\r\n    };\r\n\r\n    const handleCopy = () => {\r\n        const textToCopy = `${title}\\n\\n${content}`;\r\n        navigator.clipboard.writeText(textToCopy).then(() => {\r\n            setCopied(true);\r\n            setTimeout(() => setCopied(false), 2000);\r\n        });\r\n    };\r\n\r\n    const handleNetworkSelect = (network) => {\r\n        setSelectedNetwork(network);\r\n    };\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <Paper elevation={3} sx={{\r\n                padding: '2rem',\r\n                margin: '2rem',\r\n                width: '100%',\r\n                backgroundColor: '#fff',\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n                minHeight: '300px'\r\n            }}>\r\n                <CircularProgress color=\"primary\" />\r\n                <Typography variant=\"h6\" sx={{ mt: 2 }}>\r\n                    Generando tu contenido...\r\n                </Typography>\r\n            </Paper>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Paper elevation={3} sx={{\r\n            padding: '2rem',\r\n            margin: '2rem',\r\n            width: '100%',\r\n            backgroundColor: '#fff'\r\n        }}>\r\n            {debug && (\r\n                <Box sx={{ mb: 3, p: 2, bgcolor: '#f8f8f8', borderRadius: 1 }}>\r\n                    <Typography variant=\"subtitle2\" gutterBottom>\r\n                        Modo Debug - Datos Recibidos\r\n                    </Typography>\r\n                    <pre style={{ overflow: 'auto', maxHeight: '150px', fontSize: '0.75rem' }}>\r\n                        {JSON.stringify(data, null, 2)}\r\n                    </pre>\r\n                </Box>\r\n            )}\r\n\r\n            <Typography variant=\"h4\" gutterBottom>\r\n                Contenido Generado\r\n            </Typography>\r\n\r\n            <Box sx={{ mb: 3 }}>\r\n                <Typography variant=\"body1\" gutterBottom>\r\n                    Selecciona una red social\r\n                </Typography>\r\n                <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: '0.5rem' }}>\r\n                    {socialNetworks.map((network) => (\r\n                        <Button\r\n                            key={network.name}\r\n                            variant={selectedNetwork === network.name ? \"contained\" : \"outlined\"}\r\n                            sx={{\r\n                                backgroundColor: selectedNetwork === network.name ? network.color : 'transparent',\r\n                                color: selectedNetwork === network.name ? '#fff' : network.color,\r\n                                borderColor: network.color,\r\n                                '&:hover': {\r\n                                    backgroundColor: network.color,\r\n                                    color: '#fff',\r\n                                    opacity: 0.9\r\n                                }\r\n                            }}\r\n                            onClick={() => handleNetworkSelect(network.name)}\r\n                        >\r\n                            {network.name}\r\n                        </Button>\r\n                    ))}\r\n                </Box>\r\n            </Box>\r\n\r\n            <Divider sx={{ my: 2 }} />\r\n\r\n            <Box sx={{ mb: 3 }}>\r\n                <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between', mb: 1 }}>\r\n                    <Typography variant=\"h6\">\r\n                        TÃ­tulo\r\n                    </Typography>\r\n                    <Chip\r\n                        label=\"Personaliza el tÃ­tulo segÃºn tus necesidades\"\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                    />\r\n                </Box>\r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    value={title}\r\n                    onChange={(e) => setTitle(e.target.value)}\r\n                    sx={{ backgroundColor: 'transparent' }}\r\n                />\r\n            </Box>\r\n\r\n            <Box sx={{ mb: 3 }}>\r\n                <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between', mb: 1 }}>\r\n                    <Typography variant=\"h6\">\r\n                        Contenido de la publicaciÃ³n\r\n                    </Typography>\r\n                    <Button\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        onClick={handleCopy}\r\n                        color={copied ? \"success\" : \"primary\"}\r\n                    >\r\n                        {copied ? \"Â¡Copiado!\" : \"Copiar\"}\r\n                    </Button>\r\n                </Box>\r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    multiline\r\n                    rows={8}\r\n                    fullWidth\r\n                    value={content}\r\n                    onChange={(e) => setContent(e.target.value)}\r\n                    sx={{ backgroundColor: 'transparent' }}\r\n                />\r\n            </Box>\r\n\r\n            <Box sx={{ display: 'flex', justifyContent: 'space-between', mt: 3 }}>\r\n                <Button\r\n                    variant=\"outlined\"\r\n                    onClick={onBack}\r\n                >\r\n                    Volver\r\n                </Button>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    sx={{\r\n                        backgroundColor: '#ff9800',\r\n                        color: '#fff',\r\n                        '&:hover': { backgroundColor: '#e65100' }\r\n                    }}\r\n                >\r\n                    Publicar\r\n                </Button>\r\n            </Box>\r\n        </Paper>\r\n    );\r\n};\r\n\r\nexport default GeneratedContent;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,UAAU,EAAEC,MAAM,EAAEC,KAAK,EAAEC,SAAS,EAAEC,GAAG,EAAEC,gBAAgB,EAAEC,IAAI,EAAEC,OAAO,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3G,MAAMC,gBAAgB,GAAGA,CAAC;EAAEC,IAAI;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EAC3C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACkB,OAAO,EAAEC,UAAU,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACoB,MAAM,EAAEC,SAAS,CAAC,GAAGrB,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAM,CAACsB,eAAe,EAAEC,kBAAkB,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACwB,SAAS,EAAEC,YAAY,CAAC,GAAGzB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAAC0B,KAAK,EAAEC,QAAQ,CAAC,GAAG3B,QAAQ,CAAC,IAAI,CAAC;;EAExC;EACA,MAAM4B,cAAc,GAAG,CACnB;IAAEC,IAAI,EAAE,UAAU;IAAEC,KAAK,EAAE;EAAU,CAAC,EACtC;IAAED,IAAI,EAAE,UAAU;IAAEC,KAAK,EAAE;EAAU,CAAC,EACtC;IAAED,IAAI,EAAE,SAAS;IAAEC,KAAK,EAAE;EAAU,CAAC,EACrC;IAAED,IAAI,EAAE,WAAW;IAAEC,KAAK,EAAE;EAAU,CAAC,CAC1C;EAED7B,SAAS,CAAC,MAAM;IACZ8B,OAAO,CAACC,GAAG,CAAC,iCAAiC,EAAEnB,IAAI,CAAC;IAEpD,IAAIA,IAAI,EAAE;MACN;MACAY,YAAY,CAAC,IAAI,CAAC;MAClBQ,UAAU,CAAC,MAAM;QACb,IAAI;UACA;UACA,MAAMC,cAAc,GAAGC,aAAa,CAACtB,IAAI,CAAC;UAC1C,MAAMuB,gBAAgB,GAAGC,gBAAgB,CAACxB,IAAI,CAAC;UAE/CkB,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEE,cAAc,CAAC;UAC/CH,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEI,gBAAgB,CAAC;UAEpDnB,QAAQ,CAACiB,cAAc,CAAC;UACxBf,UAAU,CAACiB,gBAAgB,CAAC;QAChC,CAAC,CAAC,OAAOE,KAAK,EAAE;UACZP,OAAO,CAACO,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;UAChDrB,QAAQ,CAAC,yBAAyB,CAAC;UACnCE,UAAU,CAAC,mDAAmD,GAAGmB,KAAK,CAACC,OAAO,CAAC;QACnF;QAEAd,YAAY,CAAC,KAAK,CAAC;MACvB,CAAC,EAAE,IAAI,CAAC;IACZ,CAAC,MAAM;MACHM,OAAO,CAACS,IAAI,CAAC,4CAA4C,CAAC;MAC1DvB,QAAQ,CAAC,0BAA0B,CAAC;MACpCE,UAAU,CAAC,kEAAkE,CAAC;IAClF;EACJ,CAAC,EAAE,CAACN,IAAI,CAAC,CAAC;;EAEV;EACA,MAAMsB,aAAa,GAAItB,IAAI,IAAK;IAC5BkB,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAEnB,IAAI,CAAC;;IAElD;IACA,IAAIA,IAAI,CAAC4B,eAAe,IAAI5B,IAAI,CAAC4B,eAAe,CAACC,MAAM,GAAG,CAAC,EAAE;MACzD;MACA,KAAK,MAAMC,IAAI,IAAI9B,IAAI,CAAC4B,eAAe,EAAE;QACrC,IAAIE,IAAI,CAAC3B,KAAK,IAAI2B,IAAI,CAAC3B,KAAK,CAAC4B,IAAI,CAAC,CAAC,EAAE;UACjC,OAAOD,IAAI,CAAC3B,KAAK;QACrB;MACJ;;MAEA;MACA,MAAM6B,SAAS,GAAGhC,IAAI,CAAC4B,eAAe,CAAC,CAAC,CAAC;MACzC,IAAII,SAAS,CAACC,GAAG,EAAE;QACf,IAAI;UACA,MAAMC,QAAQ,GAAG,IAAIC,GAAG,CAACH,SAAS,CAACC,GAAG,CAAC,CAACC,QAAQ;UAChD,OAAO,gBAAgBA,QAAQ,EAAE;QACrC,CAAC,CAAC,OAAOE,CAAC,EAAE;UACRlB,OAAO,CAACO,KAAK,CAAC,uBAAuB,EAAEW,CAAC,CAAC;QAC7C;MACJ;IACJ;;IAEA;IACA,IAAIpC,IAAI,CAACqC,cAAc,EAAE;MACrB;MACA,MAAMC,KAAK,GAAGtC,IAAI,CAACqC,cAAc,CAACE,KAAK,CAAC,IAAI,CAAC,CAACC,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACV,IAAI,CAAC,CAAC,CAACF,MAAM,GAAG,CAAC,CAAC;MACpF,IAAIS,KAAK,CAACT,MAAM,GAAG,CAAC,EAAE;QAClB,OAAOS,KAAK,CAAC,CAAC,CAAC,CAACI,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,IAAIJ,KAAK,CAAC,CAAC,CAAC,CAACT,MAAM,GAAG,EAAE,GAAG,KAAK,GAAG,EAAE,CAAC;MACtE;IACJ;;IAEA;IACA,MAAMc,aAAa,GAAG3C,IAAI,CAAC4C,WAAW,IAAI,aAAa;IACvD,QAAQD,aAAa;MACjB,KAAK,QAAQ;QACT,OAAO,sCAAsC;MACjD,KAAK,OAAO;QACR,OAAO,mBAAmB;MAC9B,KAAK,OAAO;QACR,OAAO,4BAA4B;MACvC,KAAK,UAAU;QACX,OAAO,qBAAqB;MAChC;QACI,OAAO,+BAA+B;IAC9C;EACJ,CAAC;;EAED;EACA,MAAMnB,gBAAgB,GAAIxB,IAAI,IAAK;IAC/BkB,OAAO,CAACC,GAAG,CAAC,kCAAkC,EAAEnB,IAAI,CAAC;;IAErD;IACA,IAAIA,IAAI,CAAC4B,eAAe,IAAI5B,IAAI,CAAC4B,eAAe,CAACC,MAAM,GAAG,CAAC,EAAE;MACzDX,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC;MAC/C,IAAI0B,kBAAkB,GAAG,EAAE;MAE3B7C,IAAI,CAAC4B,eAAe,CAACkB,OAAO,CAAC,CAACC,KAAK,EAAEC,KAAK,KAAK;QAC3C9B,OAAO,CAACC,GAAG,CAAC,oBAAoB6B,KAAK,GAAG,EAAED,KAAK,CAAC;;QAEhD;QACA,IAAIA,KAAK,CAACE,SAAS,IAAIF,KAAK,CAACE,SAAS,CAAClB,IAAI,CAAC,CAAC,EAAE;UAC3Cb,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;;UAE/B;UACA,MAAM+B,QAAQ,GAAGH,KAAK,CAACE,SAAS,CAACV,KAAK,CAAC,IAAI,CAAC,CACvCC,MAAM,CAACW,CAAC,IAAIA,CAAC,CAACpB,IAAI,CAAC,CAAC,CAACF,MAAM,GAAG,EAAE,CAAC,CACjCa,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;UAEhB,IAAIQ,QAAQ,CAACrB,MAAM,GAAG,CAAC,EAAE;YACrBgB,kBAAkB,IAAI,SAAS,IAAIV,GAAG,CAACY,KAAK,CAACd,GAAG,CAAC,CAACC,QAAQ,OAAO;YACjEW,kBAAkB,IAAIK,QAAQ,CAACE,IAAI,CAAC,MAAM,CAAC,GAAG,MAAM;UACxD;QACJ;MACJ,CAAC,CAAC;;MAEF;MACA,IAAIP,kBAAkB,CAACd,IAAI,CAAC,CAAC,EAAE;QAC3Bb,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;QAC5C,OAAO0B,kBAAkB,GAAG,eAAe,GAAG7C,IAAI,CAAC4B,eAAe,CAACyB,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACrB,GAAG,IAAI,KAAK,CAAC,CAACmB,IAAI,CAAC,IAAI,CAAC;MAC1G;;MAEA;MACA,OAAO,mIAAmI;IAC9I;;IAEA;IACA,IAAIpD,IAAI,CAACqC,cAAc,EAAE;MACrBnB,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;MACtC,OAAOnB,IAAI,CAACqC,cAAc,CAACK,KAAK,CAAC,CAAC,EAAE,GAAG,CAAC,IAAI1C,IAAI,CAACqC,cAAc,CAACR,MAAM,GAAG,GAAG,GAAG,KAAK,GAAG,EAAE,CAAC;IAC9F;;IAEA;IACA,IAAI7B,IAAI,CAACK,OAAO,EAAE;MACda,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;MAClC,OAAOnB,IAAI,CAACK,OAAO;IACvB;IAEAa,OAAO,CAACS,IAAI,CAAC,qCAAqC,CAAC;IACnD;IACA,OAAO,iFAAiF;EAC5F,CAAC;EAED,MAAM4B,UAAU,GAAGA,CAAA,KAAM;IACrB,MAAMC,UAAU,GAAG,GAAGrD,KAAK,OAAOE,OAAO,EAAE;IAC3CoD,SAAS,CAACC,SAAS,CAACC,SAAS,CAACH,UAAU,CAAC,CAACI,IAAI,CAAC,MAAM;MACjDpD,SAAS,CAAC,IAAI,CAAC;MACfY,UAAU,CAAC,MAAMZ,SAAS,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC;IAC5C,CAAC,CAAC;EACN,CAAC;EAED,MAAMqD,mBAAmB,GAAIC,OAAO,IAAK;IACrCpD,kBAAkB,CAACoD,OAAO,CAAC;EAC/B,CAAC;EAED,IAAInD,SAAS,EAAE;IACX,oBACIb,OAAA,CAACP,KAAK;MAACwE,SAAS,EAAE,CAAE;MAACC,EAAE,EAAE;QACrBC,OAAO,EAAE,MAAM;QACfC,MAAM,EAAE,MAAM;QACdC,KAAK,EAAE,MAAM;QACbC,eAAe,EAAE,MAAM;QACvBC,OAAO,EAAE,MAAM;QACfC,aAAa,EAAE,QAAQ;QACvBC,UAAU,EAAE,QAAQ;QACpBC,cAAc,EAAE,QAAQ;QACxBC,SAAS,EAAE;MACf,CAAE;MAAAC,QAAA,gBACE5E,OAAA,CAACJ,gBAAgB;QAACuB,KAAK,EAAC;MAAS;QAAA0D,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACpChF,OAAA,CAACT,UAAU;QAAC0F,OAAO,EAAC,IAAI;QAACf,EAAE,EAAE;UAAEgB,EAAE,EAAE;QAAE,CAAE;QAAAN,QAAA,EAAC;MAExC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC;EAEhB;EAEA,oBACIhF,OAAA,CAACP,KAAK;IAACwE,SAAS,EAAE,CAAE;IAACC,EAAE,EAAE;MACrBC,OAAO,EAAE,MAAM;MACfC,MAAM,EAAE,MAAM;MACdC,KAAK,EAAE,MAAM;MACbC,eAAe,EAAE;IACrB,CAAE;IAAAM,QAAA,GACG7D,KAAK,iBACFf,OAAA,CAACL,GAAG;MAACuE,EAAE,EAAE;QAAEiB,EAAE,EAAE,CAAC;QAAE9B,CAAC,EAAE,CAAC;QAAE+B,OAAO,EAAE,SAAS;QAAEC,YAAY,EAAE;MAAE,CAAE;MAAAT,QAAA,gBAC1D5E,OAAA,CAACT,UAAU;QAAC0F,OAAO,EAAC,WAAW;QAACK,YAAY;QAAAV,QAAA,EAAC;MAE7C;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eACbhF,OAAA;QAAKuF,KAAK,EAAE;UAAEC,QAAQ,EAAE,MAAM;UAAEC,SAAS,EAAE,OAAO;UAAEC,QAAQ,EAAE;QAAU,CAAE;QAAAd,QAAA,EACrEe,IAAI,CAACC,SAAS,CAAC1F,IAAI,EAAE,IAAI,EAAE,CAAC;MAAC;QAAA2E,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CACR,eAEDhF,OAAA,CAACT,UAAU;MAAC0F,OAAO,EAAC,IAAI;MAACK,YAAY;MAAAV,QAAA,EAAC;IAEtC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eAEbhF,OAAA,CAACL,GAAG;MAACuE,EAAE,EAAE;QAAEiB,EAAE,EAAE;MAAE,CAAE;MAAAP,QAAA,gBACf5E,OAAA,CAACT,UAAU;QAAC0F,OAAO,EAAC,OAAO;QAACK,YAAY;QAAAV,QAAA,EAAC;MAEzC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eACbhF,OAAA,CAACL,GAAG;QAACuE,EAAE,EAAE;UAAEK,OAAO,EAAE,MAAM;UAAEsB,QAAQ,EAAE,MAAM;UAAEC,GAAG,EAAE;QAAS,CAAE;QAAAlB,QAAA,EACzD3D,cAAc,CAACsC,GAAG,CAAES,OAAO,iBACxBhE,OAAA,CAACR,MAAM;UAEHyF,OAAO,EAAEtE,eAAe,KAAKqD,OAAO,CAAC9C,IAAI,GAAG,WAAW,GAAG,UAAW;UACrEgD,EAAE,EAAE;YACAI,eAAe,EAAE3D,eAAe,KAAKqD,OAAO,CAAC9C,IAAI,GAAG8C,OAAO,CAAC7C,KAAK,GAAG,aAAa;YACjFA,KAAK,EAAER,eAAe,KAAKqD,OAAO,CAAC9C,IAAI,GAAG,MAAM,GAAG8C,OAAO,CAAC7C,KAAK;YAChE4E,WAAW,EAAE/B,OAAO,CAAC7C,KAAK;YAC1B,SAAS,EAAE;cACPmD,eAAe,EAAEN,OAAO,CAAC7C,KAAK;cAC9BA,KAAK,EAAE,MAAM;cACb6E,OAAO,EAAE;YACb;UACJ,CAAE;UACFC,OAAO,EAAEA,CAAA,KAAMlC,mBAAmB,CAACC,OAAO,CAAC9C,IAAI,CAAE;UAAA0D,QAAA,EAEhDZ,OAAO,CAAC9C;QAAI,GAdR8C,OAAO,CAAC9C,IAAI;UAAA2D,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAeb,CACX;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eAENhF,OAAA,CAACF,OAAO;MAACoE,EAAE,EAAE;QAAEgC,EAAE,EAAE;MAAE;IAAE;MAAArB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAE1BhF,OAAA,CAACL,GAAG;MAACuE,EAAE,EAAE;QAAEiB,EAAE,EAAE;MAAE,CAAE;MAAAP,QAAA,gBACf5E,OAAA,CAACL,GAAG;QAACuE,EAAE,EAAE;UAAEK,OAAO,EAAE,MAAM;UAAEE,UAAU,EAAE,QAAQ;UAAEC,cAAc,EAAE,eAAe;UAAES,EAAE,EAAE;QAAE,CAAE;QAAAP,QAAA,gBACvF5E,OAAA,CAACT,UAAU;UAAC0F,OAAO,EAAC,IAAI;UAAAL,QAAA,EAAC;QAEzB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eACbhF,OAAA,CAACH,IAAI;UACDsG,KAAK,EAAC,mDAA6C;UACnDlB,OAAO,EAAC,UAAU;UAClBmB,IAAI,EAAC;QAAO;UAAAvB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACf,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eACNhF,OAAA,CAACN,SAAS;QACNuF,OAAO,EAAC,UAAU;QAClBoB,SAAS;QACTC,KAAK,EAAEjG,KAAM;QACbkG,QAAQ,EAAGjE,CAAC,IAAKhC,QAAQ,CAACgC,CAAC,CAACkE,MAAM,CAACF,KAAK,CAAE;QAC1CpC,EAAE,EAAE;UAAEI,eAAe,EAAE;QAAc;MAAE;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eAENhF,OAAA,CAACL,GAAG;MAACuE,EAAE,EAAE;QAAEiB,EAAE,EAAE;MAAE,CAAE;MAAAP,QAAA,gBACf5E,OAAA,CAACL,GAAG;QAACuE,EAAE,EAAE;UAAEK,OAAO,EAAE,MAAM;UAAEE,UAAU,EAAE,QAAQ;UAAEC,cAAc,EAAE,eAAe;UAAES,EAAE,EAAE;QAAE,CAAE;QAAAP,QAAA,gBACvF5E,OAAA,CAACT,UAAU;UAAC0F,OAAO,EAAC,IAAI;UAAAL,QAAA,EAAC;QAEzB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eACbhF,OAAA,CAACR,MAAM;UACHyF,OAAO,EAAC,UAAU;UAClBmB,IAAI,EAAC,OAAO;UACZH,OAAO,EAAExC,UAAW;UACpBtC,KAAK,EAAEV,MAAM,GAAG,SAAS,GAAG,SAAU;UAAAmE,QAAA,EAErCnE,MAAM,GAAG,WAAW,GAAG;QAAQ;UAAAoE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5B,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC,eACNhF,OAAA,CAACN,SAAS;QACNuF,OAAO,EAAC,UAAU;QAClBwB,SAAS;QACTC,IAAI,EAAE,CAAE;QACRL,SAAS;QACTC,KAAK,EAAE/F,OAAQ;QACfgG,QAAQ,EAAGjE,CAAC,IAAK9B,UAAU,CAAC8B,CAAC,CAACkE,MAAM,CAACF,KAAK,CAAE;QAC5CpC,EAAE,EAAE;UAAEI,eAAe,EAAE;QAAc;MAAE;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eAENhF,OAAA,CAACL,GAAG;MAACuE,EAAE,EAAE;QAAEK,OAAO,EAAE,MAAM;QAAEG,cAAc,EAAE,eAAe;QAAEQ,EAAE,EAAE;MAAE,CAAE;MAAAN,QAAA,gBACjE5E,OAAA,CAACR,MAAM;QACHyF,OAAO,EAAC,UAAU;QAClBgB,OAAO,EAAE9F,MAAO;QAAAyE,QAAA,EACnB;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACThF,OAAA,CAACR,MAAM;QACHyF,OAAO,EAAC,WAAW;QACnBf,EAAE,EAAE;UACAI,eAAe,EAAE,SAAS;UAC1BnD,KAAK,EAAE,MAAM;UACb,SAAS,EAAE;YAAEmD,eAAe,EAAE;UAAU;QAC5C,CAAE;QAAAM,QAAA,EACL;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEhB,CAAC;AAAC5E,EAAA,CA9SIH,gBAAgB;AAAA0G,EAAA,GAAhB1G,gBAAgB;AAgTtB,eAAeA,gBAAgB;AAAC,IAAA0G,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}