{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SOAINT\\\\Desktop\\\\Generador-Contenido-AWS\\\\GENERADOR_AWS_POC\\\\src\\\\components\\\\GeneratedContent\\\\GeneratedContent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Typography, Button, Paper, TextField, Box, CircularProgress, Chip, Divider } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GeneratedContent = ({\n  data,\n  onBack\n}) => {\n  _s();\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  const [copied, setCopied] = useState(false);\n  const [selectedNetwork, setSelectedNetwork] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  // Redes sociales disponibles\n  const socialNetworks = [{\n    name: 'LinkedIn',\n    color: '#0077B5'\n  }, {\n    name: 'Facebook',\n    color: '#1877F2'\n  }, {\n    name: 'Twitter',\n    color: '#1DA1F2'\n  }, {\n    name: 'Instagram',\n    color: '#E1306C'\n  }];\n  useEffect(() => {\n    if (data) {\n      console.log(\"Datos recibidos en GeneratedContent:\", data);\n\n      // Iniciar un breve loading para simular procesamiento\n      setIsLoading(true);\n      setTimeout(() => {\n        // Extraer título y contenido de los datos recibidos\n        // Aquí adaptamos según la estructura real de respuesta de tus APIs\n\n        // Para la respuesta de Web Scraping\n        if (data.scraped_content) {\n          try {\n            // Generar título\n            setTitle(generarTitulo(data));\n\n            // Generar contenido combinando la información\n            setContent(generarContenido(data));\n          } catch (error) {\n            console.error(\"Error al procesar datos:\", error);\n            setContent(\"Hubo un error al procesar el contenido extraído.\");\n          }\n        }\n        // Para la respuesta de OCR\n        else if (data.extracted_text) {\n          setTitle(generarTitulo(data));\n          setContent(generarContenido(data));\n        }\n        // Fallback para otros formatos o simulaciones\n        else if (data.content) {\n          setTitle(\"Contenido generado para tu publicación\");\n          setContent(data.content);\n        }\n        setIsLoading(false);\n      }, 1500);\n    }\n  }, [data]);\n\n  // Función para generar un título basado en el contenido extraído\n  const generarTitulo = data => {\n    if (data.scraped_content && data.scraped_content.length > 0) {\n      // Extraer información relevante del primer sitio\n      const primerSitio = data.scraped_content[0];\n      if (primerSitio.title) {\n        return `${primerSitio.title.slice(0, 50)}${primerSitio.title.length > 50 ? '...' : ''}`;\n      }\n    }\n\n    // Título por defecto según el tipo de contenido\n    const tipoContenido = data.contentType || \"PUBLICACION\";\n    switch (tipoContenido) {\n      case 'IMAGEN':\n        return \"Nueva imagen para tus redes sociales\";\n      case 'FLYER':\n        return \"Flyer promocional\";\n      case 'AUDIO':\n        return \"Nuevo audio para compartir\";\n      case 'ARTICULO':\n        return \"Artículo de interés\";\n      default:\n        return \"Contenido para tu publicación\";\n    }\n  };\n\n  // Función para generar contenido basado en la información extraída\n  const generarContenido = data => {\n    if (data.scraped_content && data.scraped_content.length > 0) {\n      // Generar contenido basado en la información extraída de los sitios\n      let contenidoCombinado = \"\";\n\n      // Obtener información más relevante\n      data.scraped_content.forEach((sitio, index) => {\n        if (sitio.main_content && sitio.main_content.trim()) {\n          // Extraer primeros párrafos relevantes\n          const parrafos = sitio.main_content.split('\\n').filter(p => p.trim().length > 30);\n          if (parrafos.length > 0) {\n            contenidoCombinado += parrafos.slice(0, 2).join('\\n\\n') + '\\n\\n';\n          }\n        }\n      });\n\n      // Si hay contenido extraído, devolverlo\n      if (contenidoCombinado.trim()) {\n        return contenidoCombinado + \"\\n\\nFuentes: \" + data.scraped_content.map(s => s.url || \"URL\").join(\", \");\n      }\n    }\n\n    // Para OCR\n    if (data.extracted_text) {\n      return data.extracted_text.slice(0, 500) + (data.extracted_text.length > 500 ? '...' : '');\n    }\n\n    // Contenido por defecto\n    return \"¡Comparte este contenido con tu audiencia! Personalízalo según tus necesidades.\";\n  };\n  const handleCopy = () => {\n    const textToCopy = `${title}\\n\\n${content}`;\n    navigator.clipboard.writeText(textToCopy).then(() => {\n      setCopied(true);\n      setTimeout(() => setCopied(false), 2000);\n    });\n  };\n  const handleNetworkSelect = network => {\n    setSelectedNetwork(network);\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      sx: {\n        padding: '2rem',\n        margin: '2rem',\n        width: '100%',\n        backgroundColor: '#fff',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        minHeight: '300px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n        color: \"primary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        sx: {\n          mt: 2\n        },\n        children: \"Generando tu contenido...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    elevation: 3,\n    sx: {\n      padding: '2rem',\n      margin: '2rem',\n      width: '100%',\n      backgroundColor: '#fff'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"Contenido Generado\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        gutterBottom: true,\n        children: \"Selecciona una red social\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          flexWrap: 'wrap',\n          gap: '0.5rem'\n        },\n        children: socialNetworks.map(network => /*#__PURE__*/_jsxDEV(Button, {\n          variant: selectedNetwork === network.name ? \"contained\" : \"outlined\",\n          sx: {\n            backgroundColor: selectedNetwork === network.name ? network.color : 'transparent',\n            color: selectedNetwork === network.name ? '#fff' : network.color,\n            borderColor: network.color,\n            '&:hover': {\n              backgroundColor: network.color,\n              color: '#fff',\n              opacity: 0.9\n            }\n          },\n          onClick: () => handleNetworkSelect(network.name),\n          children: network.name\n        }, network.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {\n      sx: {\n        my: 2\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'space-between',\n          mb: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: \"T\\xEDtulo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Chip, {\n          label: \"Personaliza el t\\xEDtulo seg\\xFAn tus necesidades\",\n          variant: \"outlined\",\n          size: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        variant: \"outlined\",\n        fullWidth: true,\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        sx: {\n          backgroundColor: 'transparent'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'space-between',\n          mb: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: \"Contenido de la publicaci\\xF3n\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          size: \"small\",\n          onClick: handleCopy,\n          color: copied ? \"success\" : \"primary\",\n          children: copied ? \"¡Copiado!\" : \"Copiar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        variant: \"outlined\",\n        multiline: true,\n        rows: 8,\n        fullWidth: true,\n        value: content,\n        onChange: e => setContent(e.target.value),\n        sx: {\n          backgroundColor: 'transparent'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 13\n    }, this), data && data.contentType === 'IMAGEN' && data.imageUrl && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: \"Vista previa de la imagen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          width: '100%',\n          height: '300px',\n          backgroundColor: '#f5f5f5',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          borderRadius: '4px',\n          overflow: 'hidden'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: data.imageUrl,\n          alt: \"Vista previa\",\n          style: {\n            maxWidth: '100%',\n            maxHeight: '100%',\n            objectFit: 'contain'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        mt: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        onClick: onBack,\n        children: \"Volver\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        sx: {\n          backgroundColor: '#ff9800',\n          color: '#fff',\n          '&:hover': {\n            backgroundColor: '#e65100'\n          }\n        },\n        children: \"Publicar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 9\n  }, this);\n};\n_s(GeneratedContent, \"GGeji04lD61MsNvdlRiGY+Z5SR0=\");\n_c = GeneratedContent;\nexport default GeneratedContent;\nvar _c;\n$RefreshReg$(_c, \"GeneratedContent\");","map":{"version":3,"names":["React","useState","useEffect","Typography","Button","Paper","TextField","Box","CircularProgress","Chip","Divider","jsxDEV","_jsxDEV","GeneratedContent","data","onBack","_s","title","setTitle","content","setContent","copied","setCopied","selectedNetwork","setSelectedNetwork","isLoading","setIsLoading","socialNetworks","name","color","console","log","setTimeout","scraped_content","generarTitulo","generarContenido","error","extracted_text","length","primerSitio","slice","tipoContenido","contentType","contenidoCombinado","forEach","sitio","index","main_content","trim","parrafos","split","filter","p","join","map","s","url","handleCopy","textToCopy","navigator","clipboard","writeText","then","handleNetworkSelect","network","elevation","sx","padding","margin","width","backgroundColor","display","flexDirection","alignItems","justifyContent","minHeight","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","mt","gutterBottom","mb","flexWrap","gap","borderColor","opacity","onClick","my","label","size","fullWidth","value","onChange","e","target","multiline","rows","imageUrl","height","borderRadius","overflow","src","alt","style","maxWidth","maxHeight","objectFit","_c","$RefreshReg$"],"sources":["C:/Users/SOAINT/Desktop/Generador-Contenido-AWS/GENERADOR_AWS_POC/src/components/GeneratedContent/GeneratedContent.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Typography, Button, Paper, TextField, Box, CircularProgress, Chip, Divider } from '@mui/material';\r\n\r\nconst GeneratedContent = ({ data, onBack }) => {\r\n    const [title, setTitle] = useState('');\r\n    const [content, setContent] = useState('');\r\n    const [copied, setCopied] = useState(false);\r\n    const [selectedNetwork, setSelectedNetwork] = useState('');\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    // Redes sociales disponibles\r\n    const socialNetworks = [\r\n        { name: 'LinkedIn', color: '#0077B5' },\r\n        { name: 'Facebook', color: '#1877F2' },\r\n        { name: 'Twitter', color: '#1DA1F2' },\r\n        { name: 'Instagram', color: '#E1306C' }\r\n    ];\r\n\r\n    useEffect(() => {\r\n        if (data) {\r\n            console.log(\"Datos recibidos en GeneratedContent:\", data);\r\n\r\n            // Iniciar un breve loading para simular procesamiento\r\n            setIsLoading(true);\r\n            setTimeout(() => {\r\n                // Extraer título y contenido de los datos recibidos\r\n                // Aquí adaptamos según la estructura real de respuesta de tus APIs\r\n\r\n                // Para la respuesta de Web Scraping\r\n                if (data.scraped_content) {\r\n                    try {\r\n                        // Generar título\r\n                        setTitle(generarTitulo(data));\r\n\r\n                        // Generar contenido combinando la información\r\n                        setContent(generarContenido(data));\r\n                    } catch (error) {\r\n                        console.error(\"Error al procesar datos:\", error);\r\n                        setContent(\"Hubo un error al procesar el contenido extraído.\");\r\n                    }\r\n                }\r\n                // Para la respuesta de OCR\r\n                else if (data.extracted_text) {\r\n                    setTitle(generarTitulo(data));\r\n                    setContent(generarContenido(data));\r\n                }\r\n                // Fallback para otros formatos o simulaciones\r\n                else if (data.content) {\r\n                    setTitle(\"Contenido generado para tu publicación\");\r\n                    setContent(data.content);\r\n                }\r\n\r\n                setIsLoading(false);\r\n            }, 1500);\r\n        }\r\n    }, [data]);\r\n\r\n    // Función para generar un título basado en el contenido extraído\r\n    const generarTitulo = (data) => {\r\n        if (data.scraped_content && data.scraped_content.length > 0) {\r\n            // Extraer información relevante del primer sitio\r\n            const primerSitio = data.scraped_content[0];\r\n            if (primerSitio.title) {\r\n                return `${primerSitio.title.slice(0, 50)}${primerSitio.title.length > 50 ? '...' : ''}`;\r\n            }\r\n        }\r\n\r\n        // Título por defecto según el tipo de contenido\r\n        const tipoContenido = data.contentType || \"PUBLICACION\";\r\n        switch (tipoContenido) {\r\n            case 'IMAGEN':\r\n                return \"Nueva imagen para tus redes sociales\";\r\n            case 'FLYER':\r\n                return \"Flyer promocional\";\r\n            case 'AUDIO':\r\n                return \"Nuevo audio para compartir\";\r\n            case 'ARTICULO':\r\n                return \"Artículo de interés\";\r\n            default:\r\n                return \"Contenido para tu publicación\";\r\n        }\r\n    };\r\n\r\n    // Función para generar contenido basado en la información extraída\r\n    const generarContenido = (data) => {\r\n        if (data.scraped_content && data.scraped_content.length > 0) {\r\n            // Generar contenido basado en la información extraída de los sitios\r\n            let contenidoCombinado = \"\";\r\n\r\n            // Obtener información más relevante\r\n            data.scraped_content.forEach((sitio, index) => {\r\n                if (sitio.main_content && sitio.main_content.trim()) {\r\n                    // Extraer primeros párrafos relevantes\r\n                    const parrafos = sitio.main_content.split('\\n').filter(p => p.trim().length > 30);\r\n                    if (parrafos.length > 0) {\r\n                        contenidoCombinado += parrafos.slice(0, 2).join('\\n\\n') + '\\n\\n';\r\n                    }\r\n                }\r\n            });\r\n\r\n            // Si hay contenido extraído, devolverlo\r\n            if (contenidoCombinado.trim()) {\r\n                return contenidoCombinado + \"\\n\\nFuentes: \" + data.scraped_content.map(s => s.url || \"URL\").join(\", \");\r\n            }\r\n        }\r\n\r\n        // Para OCR\r\n        if (data.extracted_text) {\r\n            return data.extracted_text.slice(0, 500) + (data.extracted_text.length > 500 ? '...' : '');\r\n        }\r\n\r\n        // Contenido por defecto\r\n        return \"¡Comparte este contenido con tu audiencia! Personalízalo según tus necesidades.\";\r\n    };\r\n\r\n    const handleCopy = () => {\r\n        const textToCopy = `${title}\\n\\n${content}`;\r\n        navigator.clipboard.writeText(textToCopy).then(() => {\r\n            setCopied(true);\r\n            setTimeout(() => setCopied(false), 2000);\r\n        });\r\n    };\r\n\r\n    const handleNetworkSelect = (network) => {\r\n        setSelectedNetwork(network);\r\n    };\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <Paper elevation={3} sx={{\r\n                padding: '2rem',\r\n                margin: '2rem',\r\n                width: '100%',\r\n                backgroundColor: '#fff',\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n                minHeight: '300px'\r\n            }}>\r\n                <CircularProgress color=\"primary\" />\r\n                <Typography variant=\"h6\" sx={{ mt: 2 }}>\r\n                    Generando tu contenido...\r\n                </Typography>\r\n            </Paper>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Paper elevation={3} sx={{\r\n            padding: '2rem',\r\n            margin: '2rem',\r\n            width: '100%',\r\n            backgroundColor: '#fff'\r\n        }}>\r\n            <Typography variant=\"h4\" gutterBottom>\r\n                Contenido Generado\r\n            </Typography>\r\n\r\n            <Box sx={{ mb: 3 }}>\r\n                <Typography variant=\"body1\" gutterBottom>\r\n                    Selecciona una red social\r\n                </Typography>\r\n                <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: '0.5rem' }}>\r\n                    {socialNetworks.map((network) => (\r\n                        <Button\r\n                            key={network.name}\r\n                            variant={selectedNetwork === network.name ? \"contained\" : \"outlined\"}\r\n                            sx={{\r\n                                backgroundColor: selectedNetwork === network.name ? network.color : 'transparent',\r\n                                color: selectedNetwork === network.name ? '#fff' : network.color,\r\n                                borderColor: network.color,\r\n                                '&:hover': {\r\n                                    backgroundColor: network.color,\r\n                                    color: '#fff',\r\n                                    opacity: 0.9\r\n                                }\r\n                            }}\r\n                            onClick={() => handleNetworkSelect(network.name)}\r\n                        >\r\n                            {network.name}\r\n                        </Button>\r\n                    ))}\r\n                </Box>\r\n            </Box>\r\n\r\n            <Divider sx={{ my: 2 }} />\r\n\r\n            <Box sx={{ mb: 3 }}>\r\n                <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between', mb: 1 }}>\r\n                    <Typography variant=\"h6\">\r\n                        Título\r\n                    </Typography>\r\n                    <Chip\r\n                        label=\"Personaliza el título según tus necesidades\"\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                    />\r\n                </Box>\r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    value={title}\r\n                    onChange={(e) => setTitle(e.target.value)}\r\n                    sx={{ backgroundColor: 'transparent' }}\r\n                />\r\n            </Box>\r\n\r\n            <Box sx={{ mb: 3 }}>\r\n                <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between', mb: 1 }}>\r\n                    <Typography variant=\"h6\">\r\n                        Contenido de la publicación\r\n                    </Typography>\r\n                    <Button\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        onClick={handleCopy}\r\n                        color={copied ? \"success\" : \"primary\"}\r\n                    >\r\n                        {copied ? \"¡Copiado!\" : \"Copiar\"}\r\n                    </Button>\r\n                </Box>\r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    multiline\r\n                    rows={8}\r\n                    fullWidth\r\n                    value={content}\r\n                    onChange={(e) => setContent(e.target.value)}\r\n                    sx={{ backgroundColor: 'transparent' }}\r\n                />\r\n            </Box>\r\n\r\n            {/* Si el tipo de contenido es IMAGEN, podríamos mostrar una vista previa aquí */}\r\n            {data && data.contentType === 'IMAGEN' && data.imageUrl && (\r\n                <Box sx={{ mb: 3 }}>\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                        Vista previa de la imagen\r\n                    </Typography>\r\n                    <Box\r\n                        sx={{\r\n                            width: '100%',\r\n                            height: '300px',\r\n                            backgroundColor: '#f5f5f5',\r\n                            display: 'flex',\r\n                            justifyContent: 'center',\r\n                            alignItems: 'center',\r\n                            borderRadius: '4px',\r\n                            overflow: 'hidden'\r\n                        }}\r\n                    >\r\n                        <img\r\n                            src={data.imageUrl}\r\n                            alt=\"Vista previa\"\r\n                            style={{ maxWidth: '100%', maxHeight: '100%', objectFit: 'contain' }}\r\n                        />\r\n                    </Box>\r\n                </Box>\r\n            )}\r\n\r\n            <Box sx={{ display: 'flex', justifyContent: 'space-between', mt: 3 }}>\r\n                <Button\r\n                    variant=\"outlined\"\r\n                    onClick={onBack}\r\n                >\r\n                    Volver\r\n                </Button>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    sx={{\r\n                        backgroundColor: '#ff9800',\r\n                        color: '#fff',\r\n                        '&:hover': { backgroundColor: '#e65100' }\r\n                    }}\r\n                >\r\n                    Publicar\r\n                </Button>\r\n            </Box>\r\n        </Paper>\r\n    );\r\n};\r\n\r\nexport default GeneratedContent;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}